#page-dashboard.page-content-body
  .page-content-body-section
    %h1 To Ship
    .stats
      = link_to orders_path do
        .stat-container
          .stat
            .stat-label Retail Orders Left to Ship
            .stat-number{class: get_unshipped_orders_count("Retail") > 0 ? "red" : ""}
              #{pluralize(get_unshipped_orders_count("Retail"), 'order')}
      
      = link_to wholesale_path do
        .stat-container
          .stat
            .stat-label Wholesale Orders Left to Ship
            .stat-number{class: get_unshipped_orders_count("Wholesale") > 0 ? "red" : ""}
              #{pluralize(get_unshipped_orders_count("Wholesale"), 'order')}
      = link_to order_items_path do
        .stat-container
          .stat
            .stat-label Total Items To Ship
            .stat-number.red
              #{pluralize(get_unshipped_items_count, 'item')}
    .stats
      = link_to orders_path do
        .stat-container
          .stat
            .stat-label Retail Orders Needing Payment
            .stat-number{class: get_unpaid_orders_count("Retail") > 0 ? "red" : ""}
              #{pluralize(get_unpaid_orders_count("Retail"), 'order')}
      
      = link_to wholesale_path do
        .stat-container
          .stat
            .stat-label Wholesale Orders Needing Payment
            .stat-number{class: get_unpaid_orders_count("Wholesale") > 0 ? "red" : ""}
              #{pluralize(get_unpaid_orders_count("Wholesale"), 'order')}

  .page-content-body-section
    %h1 Orders
    .stats
      = link_to customers_path do
        .stat-container
          .stat
            .stat-label Total Customers
            .stat-number
              #{pluralize(get_customers_count, 'customer')}
            .stat-stats
              .stat-stats-row
                %span.stat-stats-row-number= get_customers_count("Retail")
                %span.stat-stats-row-label retail
              .stat-stats-row
                %span.stat-stats-row-number= get_customers_count("Wholesale")
                %span.stat-stats-row-label wholesale
      = link_to orders_path do
        .stat-container
          .stat
            .stat-label Total Orders
            .stat-number
              #{pluralize(get_orders_count, 'order')}
            .stat-stats
              .stat-stats-row
                %span.stat-stats-row-number= get_orders_count("Retail")
                %span.stat-stats-row-label retail
              .stat-stats-row
                %span.stat-stats-row-number= get_orders_count("Wholesale")
                %span.stat-stats-row-label wholesale
      = link_to order_items_path do
        .stat-container
          .stat
            .stat-label Total Order Items
            .stat-number
              #{pluralize(number_with_delimiter(get_items_sold_count), 'item')}
            .stat-stats
              .stat-stats-row
                %span.stat-stats-row-number= get_items_sold_count("Retail")
                %span.stat-stats-row-label retail
              .stat-stats-row
                %span.stat-stats-row-number= get_items_sold_count("Wholesale")
                %span.stat-stats-row-label wholesale
      .stat-container
        .stat
          .stat-label Avg Orders/Customer
          .stat-number
            = get_average_orders_per_customer.to_s + " order/customer"
          .stat-stats
            .stat-stats-row
              %span.stat-stats-row-number= get_average_orders_per_customer("Retail")
              %span.stat-stats-row-label retail
            .stat-stats-row
              %span.stat-stats-row-number= get_average_orders_per_customer("Wholesale")
              %span.stat-stats-row-label wholesale
      .stat-container
        .stat
          .stat-label Avg Items/Customer
          .stat-number
            = get_average_order_items_per_customer.to_s + " items/customer"
          .stat-stats
            .stat-stats-row
              %span.stat-stats-row-number= get_average_order_items_per_customer("Retail")
              %span.stat-stats-row-label retail
            .stat-stats-row
              %span.stat-stats-row-number= get_average_order_items_per_customer("Wholesale")
              %span.stat-stats-row-label wholesale
      .stat-container
        .stat
          .stat-label Avg Items/Order
          .stat-number= get_average_items_per_order.to_s + " items/order"
          .stat-stats
            .stat-stats-row
              %span.stat-stats-row-number= get_average_items_per_order("Retail")
              %span.stat-stats-row-label retail
            .stat-stats-row
              %span.stat-stats-row-number= get_average_items_per_order("Wholesale")
              %span.stat-stats-row-label wholesale


  .page-content-body-section
    %h1 Profit
    // TOTAL NUMBERS ------------------------------------------------ //
    .stats
      .stat-container
        .stat
          .stat-label Profit
          -if get_profit < 0
            .stat-number.red
              = "-$" + number_with_delimiter(get_profit.abs).to_s
          -else
            .stat-number
              = "$" + number_with_delimiter(get_profit).to_s
          .stat-stats
            .stat-stats-row &nbsp;
            .stat-stats-row &nbsp;
      .stat-container
        .stat
          .stat-label Total Revenue
          .stat-number.green= "$" + number_with_delimiter(get_revenue).to_s
          .stat-stats
            .stat-stats-row
              %span.stat-stats-row-percentage= get_revenue_percentage("Retail").to_s + "%"
              %span.stat-stats-row-number= "$" + number_with_delimiter(get_revenue("Retail", @start_date, @end_date)).to_s
              %span.stat-stats-row-label retail
            .stat-stats-row
              %span.stat-stats-row-percentage= number_with_delimiter(get_revenue_percentage("Wholesale")).to_s + "%"
              %span.stat-stats-row-number= "$" + number_with_delimiter(get_revenue("Wholesale", @start_date, @end_date)).to_s
              %span.stat-stats-row-label whole
      = link_to expenses_url do
        .stat-container
          .stat
            .stat-label Total Expenses
            .stat-number.red
              = "$" + number_with_delimiter(get_expenses_number).to_s
            .stat-stats
              .stat-stats-row &nbsp;
              .stat-stats-row &nbsp;
    -if get_profit < 0
      .stats
        - get_product_types.each do |product_type|
          .stat-container
            .stat
              .stat-label= product_type
              .stat-number
                #{pluralize(get_number_of_items_to_sell_by_type(product_type), product_type)}
    // AVERAGE MONTHLY NUMBERS ------------------------------------------------ //
    .stats
      .stat-container
        .stat
          .stat-label Avg Monthly Profit
          .stat-number{class: get_profit < 0 ? "red" : ""}
            = "$" + number_with_delimiter(get_average_monthly_profit).to_s
          .stat-stats
            .stat-stats-row &nbsp;
            .stat-stats-row &nbsp;
      .stat-container
        .stat
          .stat-label Avg Monthly Revenue
          .stat-number.green= "$" + number_with_delimiter(get_average_monthly_revenue).to_s
          .stat-stats
            .stat-stats-row
              %span.stat-stats-row-percentage= get_average_monthly_revenue_percentage("Retail", @start_date, @end_date).to_s + "%"
              %span.stat-stats-row-number= "$" + number_with_delimiter(get_average_monthly_revenue("Retail", @start_date, @end_date)).to_s
              %span.stat-stats-row-label retail
            .stat-stats-row
              %span.stat-stats-row-percentage= number_with_delimiter(get_average_monthly_revenue_percentage("Wholesale", @start_date, @end_date)).to_s + "%"
              %span.stat-stats-row-number= "$" + number_with_delimiter(get_average_monthly_revenue("Wholesale", @start_date, @end_date)).to_s
              %span.stat-stats-row-label whole
      .stat-container
        .stat.red
          .stat-label Avg Monthly Expenses
          .stat-number= "$" + number_with_delimiter(get_average_monthly_expenses).to_s
          .stat-stats
            .stat-stats-row &nbsp;
            .stat-stats-row &nbsp;



    // RECENT AVERAGE MONTHLY NUMBERS ------------------------------------------------ //
    .stats
      .stat-container
        .stat
          .stat-label Recent Avg Monthly Profit
          .stat-number{class: get_profit < 0 ? "red" : ""}
            = "$" + number_with_delimiter(get_average_monthly_profit(@recent_period_start_date, @recent_period_end_date)).to_s
          .stat-stats
            .stat-stats-row &nbsp;
            .stat-stats-row &nbsp;
      .stat-container
        .stat
          .stat-label Recent Avg Monthly Revenue
          .stat-number.green= "$" + number_with_delimiter(get_average_monthly_revenue(nil, @recent_period_start_date, @recent_period_end_date)).to_s
          .stat-stats
            .stat-stats-row
              %span.stat-stats-row-percentage= get_average_monthly_revenue_percentage("Retail", @recent_period_start_date, @recent_period_end_Date).to_s + "%"
              %span.stat-stats-row-number= "$" + get_average_monthly_revenue("Retail", @recent_period_start_date, @recent_period_end_date).to_s
              %span.stat-stats-row-label retail
            .stat-stats-row
              %span.stat-stats-row-percentage= get_average_monthly_revenue_percentage("Wholesale", @recent_period_start_date, @recent_period_end_Date).to_s + "%"
              %span.stat-stats-row-number= "$" + get_average_monthly_revenue("Wholesale", @recent_period_start_date, @recent_period_end_date).to_s
              %span.stat-stats-row-label whole
      .stat-container
        .stat.red
          .stat-label Recent Avg Monthly Expenses
          .stat-number= "$" + number_with_delimiter(get_average_monthly_expenses(@recent_period_start_date, @recent_period_end_date)).to_s
          .stat-stats
            .stat-stats-row &nbsp;
            .stat-stats-row &nbsp;

    // THIS MONTH'S NUMBERS ------------------------------------------------ //
    .stats
      .stat-container
        .stat
          .stat-label This Month's Profit
          .stat-number{class: get_profit < 0 ? "red" : ""}
            = "$" + number_with_delimiter(get_profit(@current_month_start_date, @current_month_end_date)).to_s
          .stat-stats
            .stat-stats-row &nbsp;
            .stat-stats-row &nbsp;
      .stat-container
        .stat
          .stat-label This Month's Revenue
          .stat-number.green= "$" + number_with_delimiter(get_revenue(nil, @current_month_start_date, @current_month_end_date)).to_s
          .stat-stats
            .stat-stats-row
              %span.stat-stats-row-percentage= get_average_monthly_revenue_percentage("Retail", @current_month_start_date, @current_month_end_date).to_s + "%"
              %span.stat-stats-row-number= "$" + number_with_delimiter(get_average_monthly_revenue("Retail", @current_month_start_date, @current_month_end_date)).to_s
              %span.stat-stats-row-label retail
            .stat-stats-row
              %span.stat-stats-row-percentage= number_with_delimiter(get_average_monthly_revenue_percentage("Wholesale", @current_month_start_date, @current_month_end_date)).to_s + "%"
              %span.stat-stats-row-number= "$" + number_with_delimiter(get_average_monthly_revenue("Wholesale", @current_month_start_date, @current_month_end_date)).to_s
              %span.stat-stats-row-label whole
      .stat-container
        .stat.red
          .stat-label This Month's Expenses
          .stat-number= "$" + number_with_delimiter(get_expenses_number(@current_month_start_date, @current_month_end_date)).to_s
          .stat-stats
            .stat-stats-row &nbsp;
            .stat-stats-row &nbsp;



    #chart-profit-by-month.chart

  .page-content-body-section
    %h1 Revenue
    .stats
      .stat-container
        .stat
          .stat-label Total Revenue
          .stat-number.green
            = "$" + number_with_delimiter(get_revenue).to_s
      .stat-container
        .stat
          .stat-label Average Rev / Order
          .stat-number.green
            = "$" + number_with_delimiter(get_average_revenue_per_order).to_s + "/order"
      .stat-container
        .stat
          .stat-label Average Rev / Item
          .stat-number.green
            = "$" + number_with_delimiter(get_average_revenue_per_order_item).to_s + "/item"
      .stat-container
        .stat
          .stat-label Average Rev / Customer
          .stat-number.green
            = "$" + number_with_delimiter(get_average_revenue_per_customer).to_s + "/customer"

    #chart-cumulative-revenue-by-day-of-month.chart

    %table#table-revenue-by-month.stripe.order-column
      %thead
        %tr
          %th Month
          %th Revenue
      %tbody
        - get_months.each do |month|
          %tr
            %td= month.strftime "%Y - %m - %B "
            %td= "$" + number_with_delimiter(get_revenue_by_month(month)).to_s


  .page-content-body-section
    %h1 Costs
    = render partial: 'partials/expenses_stats'

  .page-content-body-section.page-content-body-section-products
    %h1 Products
    = render partial: 'partials/product_stats'






:javascript
  $("#table-revenue-by-month").DataTable({
    dom: 'iCfrtS',
    pageLength: -1,
    order: [1, 'desc'],
    orderClasses: true
  });




  $(function () { 
    // PROFIT BY MONTH //////////////////////////////////////

    $('#chart-profit-by-month').highcharts({
      chart: {
        spacing: [40, 30, 40, 30],
        type: 'line',
        background: '#ffffff',
        style: {
          fontFamily: 'Source Sans Pro'
        }
      },
      title: {
        text: ''
      },
      legend: {
        itemStyle: {
          'fontSize': '15px', 
          'fontWeight': 'normal',
          'color': '#555555'
        },
        margin: 20,
        verticalAlign: 'top'
      },
      xAxis: {
        categories: #{get_months_array},
        labels: {
          style: {
            fontSize: '14px'
          }
        }
      },
      yAxis: {
        title: {
          text: 'Amount ($)'
        },
        opposite: true,
        labels: {
          style: {
            fontSize: '13px'
          },
          format: "${value}"
        },
        tickInterval: '500'
      },
      tooltip: {
        shared: true,
        headerFormat: '<span style="font-size: 15px; font-weight: bold;">{point.key}</span><br/>',
        style: {
          'padding': '20px 20px 15px 20px',
          'fontSize': '15px'
        }
      },
      series: [
        {
          type: 'area',
          name: 'Profit',
          data: #{get_profit_array_by_months},
          color: 'gray',
          negativeColor: '#FF6060',
          marker: {
            enabled: false
          },
          fillOpacity: '0.25'
        },
        {
          name: 'Cost',
          data: #{get_cost_array_by_months},
          color: '#FF4343',
          marker: {
            enabled: false
          }
        },
        {
          name: 'Revenue',
          data: #{get_revenue_array_by_months},
          color: '#70DE64',
          marker: {
            enabled: false
          }
        }
      ]
    });





    // CUMULATIVE REVENUE BY DAY OF MONTH //////////////////////////////////////

    $('#chart-cumulative-revenue-by-day-of-month').highcharts({
      chart: {
        spacing: [40, 30, 40, 30],
        type: 'line',
        background: '#ffffff',
        style: {
          fontFamily: 'Source Sans Pro'
        }
      },
      title: {
        text: ''
      },
      legend: {
        itemStyle: {
          'fontSize': '15px', 
          'fontWeight': 'normal',
          'color': '#555555'
        },
        margin: 20,
        verticalAlign: 'top',
        layout: 'vertical',
        align: 'left',
        itemMarginBottom: 8
      },
      xAxis: {
        categories: #{get_days_of_month_array},
        title: {
          text: 'Day Of Month'
        },
        labels: {
          style: {
            fontSize: '14px'
          }
        }
      },
      yAxis: {
        title: {
          text: 'Amount ($)'
        },
        opposite: true,
        labels: {
          style: {
            fontSize: '13px'
          },
          format: "${value}"
        },
        tickInterval: '500'
      },
      tooltip: {
        headerFormat: '<span style="font-size: 15px; font-weight: bold;">Day {point.key}</span><br/>',
        style: {
          'padding': '20px 20px 15px 20px',
          'fontSize': '15px'
        }
      },
      series: #{get_cumulative_revenue_by_day_of_month_series}
    });
  });
