#page-dashboard.page-content-body
  .page-content-body-section
    %h1 
      Revenue
      %span.subtitle Am I on track to meet my revenue goals?

    - # TABS #################################
    - today = get_last_sale_date
    .tabbed-charts
      .tabbed-charts-tabs.stats.stats-3.stats-tabbed{role: "tablist"}
        %a.stat-container.active{"href" => "#chart-cumulative-revenue-by-month-of-year-container", "aria-controls" => "chart-cumulative-revenue-by-month-of-year-container", "role" => "tab", "data-toggle" => "tab"}
          .stat
            .stat-label= today.strftime "%B %Y" + " Revenue"
            .stat-number= format_money(get_revenue_by_month(today))
            .stat-stats
              .stat-stats-row
                %span.stat-stats-row-number= format_money(get_revenue_goal_by_month(today))
                %span.stat-stats-row-label= today.strftime "%B" + " goal"
              .stat-stats-row
                %span.stat-stats-row-number= format_money(get_adjusted_year_revenue_goal)
                %span.stat-stats-row-label= today.strftime "%Y" + " left"

        %a.stat-container{"href" => "#chart-cumulative-revenue-by-day-of-month-container", "aria-controls" => "chart-cumulative-revenue-by-day-of-month-container", "role" => "tab", "data-toggle" => "tab"} 
          .stat
            .stat-label= today.strftime "%B %Y" + " Goal Reached As Of Today"
            .stat-number
              - pct_diff = get_percentage_achieved_for_month(today) - get_percentage_goal_by_day_of_month(today)
              %span{class: pct_diff < 0 ? "red" : "green"}
                = format_percentage(get_percentage_achieved_for_month(today))
            .stat-stats
              .stat-stats-row
                %span.stat-stats-row-number=format_percentage(get_percentage_goal_by_day_of_month(today))
                %span.stat-stats-row-label today's target
              .stat-stats-row
                %span.stat-stats-row-number
                %span.stat-stats-row-label
        
        %a.stat-container{"href" => "#chart-daily-revenue-container", "aria-controls" => "chart-daily-revenue-container", "role" => "tab", "data-toggle" => "tab"}
          .stat
            .stat-label= "Daily Average Revenue in " + (today.strftime "%B %Y")
            .stat-number
              %span{class: get_daily_percentage_achieved_for_month(today) < 100 ? "red" : "green"}
                = format_money(get_average_daily_revenue_by_month(today))
            .stat-stats
              .stat-stats-row
                %span.stat-stats-row-number=format_percentage(get_daily_percentage_achieved_for_month(today))
                %span.stat-stats-row-label of goal
              .stat-stats-row
                %span.stat-stats-row-number= format_money(get_daily_revenue_goal_by_month(today))
                %span.stat-stats-row-label= today.strftime "%B" + " daily goal"

      - # CHARTS #################################
      .tabbed-charts-content.tab-content
        #chart-cumulative-revenue-by-month-of-year-container.tab-pane.active{"role" => "tabpanel"}
          #chart-cumulative-revenue-by-month-of-year.chart

        #chart-cumulative-revenue-by-day-of-month-container.tab-pane{"role" => "tabpanel"}
          #chart-cumulative-revenue-by-day-of-month.chart

        #chart-daily-revenue-container.tab-pane{"role" => "tabpanel"}
          #chart-daily-revenue.chart 

    - # TABLE #################################
    %table#table-revenue-by-month.stripe.order-column
      %thead
        %tr
          %th Month
          %th Revenue
          %th Goal
          %th Achieved
          %th Daily Avg Rev
          %th Month's Daily Goal
          %th Achieved
          %th Year's Daily Goal
          %th Achieved
      %tbody
        - get_months.each do |month|
          %tr{class: month.month == 12 ? "border-bottom" : ""}
            %td.border-right
              %strong= month.strftime "%Y - %m - %b"
            %td= format_money(get_revenue_by_month(month))
            %td= format_money(get_revenue_goal_by_month(month))
            %td.border-right
              - pct = get_percentage_achieved_for_month(month)
              %span{class: pct > 100 ? 'green' : 'red'}= format_percentage(pct)
            %td.border-right= format_money(get_average_daily_revenue_by_month(month))
            %td= format_money(get_daily_revenue_goal_by_month(month))
            %td.border-right
              - pct = get_daily_percentage_achieved_for_month(month)
              %span{class: pct > 100 ? 'green' : 'red'}= format_percentage(pct)
            %td= format_money(get_daily_revenue_goal_by_year(month.year))
            %td
              - pct = get_daily_percentage_achieved_for_year_by_month(month)
              %span{class: pct > 100 ? 'green' : 'red'}= format_percentage(pct)
      %thead
        %tr.border-top
          %th Month
          %th Revenue
          %th Adjusted
          %th Achieved
          %th Daily Avg Rev
          %th Month's Daily Goal
          %th Achieved
          %th Year's Daily Goal
          %th Achieved
      %tbody
        - adjusted_monthly_revenue_goal = get_adjusted_monthly_revenue_goal
        - adjusted_daily_revenue_goal = get_adjusted_daily_revenue_goal
        - get_months_left_in_year.each do |month|
          %tr
            %td.border-right
              %strong= month.strftime "%Y - %m - %b"
            %td= "-"
            %td= format_money(adjusted_monthly_revenue_goal)
            %td.border-right= "-"
            %td.border-right= "-"
            %td= "-"
            %td.border-right= "-"
            %td= format_money(get_adjusted_daily_revenue_goal)
            %td= "-"
      %tfoot
        - get_years.each do |year|
          %tr
            %th.border-right 
              %strong Total - #{year}
            %th= format_money(get_revenue_by_year(year)) 
            %th= format_money(get_revenue_goal_by_year(year))
            %th.border-right
              - pct = get_percentage_achieved_by_year(year)
              %span{class: pct > 100 ? 'green' : 'red'}= format_percentage(pct)
            %th.border-right= format_money(get_average_daily_revenue_by_year(year))
            %th
            %th.border-right
            %th= format_money(get_daily_revenue_goal_by_year(year))
            %th
              - pct = get_daily_percentage_achieved_for_year(year)
              %span{class: pct > 100 ? 'green' : 'red'}= format_percentage(pct)

:javascript

    // CHART TABS //////////////////////////////////////
    $('.tabbed-charts-tabs a').click(function (e) {
      e.preventDefault();
      $(this).tab('show');
      $('.tabbed-charts-tabs a').removeClass('active');
      $(this).addClass('active');
      jQuery("#chart-cumulative-revenue-by-day-of-month, #chart-daily-revenue").each(function() {
        var chart = jQuery(this).highcharts(); // target the chart itself
        chart.reflow(); // reflow that chart
      });
    });

    // CHARTS //////////////////////////////////////
    
    // #chart-cumulative-revenue-by-month-of-year
    $(function () { 
      $('#chart-cumulative-revenue-by-month-of-year').highcharts({
        chart: {
          spacing: [40, 30, 40, 30],
          type: 'line',
          background: '#ffffff',
          style: {
            fontFamily: 'Source Sans Pro'
          }
        },
        title: {
          text: 'Am I on track to meet my revenue goal for the year?'
        },
        legend: {
          itemStyle: {
            'fontSize': '13px', 
            'fontWeight': 'normal',
            'color': '#555555'
          },
          margin: 20,
          verticalAlign: 'top',
          layout: 'vertical',
          align: 'left',
          itemMarginBottom: 8
        },
        xAxis: {
          categories: #{get_month_names_array},
          title: {
            text: 'Month'
          },
          labels: {
            style: {
              fontSize: '13px'
            }
          }
        },
        yAxis: {
          title: {
            text: 'Revenue ($)'
          },
          opposite: true,
          labels: {
            style: {
              fontSize: '13px'
            },
            format: "${value}"
          },
          tickInterval: '2000'
        },
        tooltip: {
          formatter: function () {
            return this.x + ' ' + this.series.name + ': <b>$' + this.y + '</b>';
            },
          style: {
            'padding': '20px 20px 15px 20px',
            'fontSize': '15px'
          }
        },
        series: #{get_cumulative_revenue_by_month_of_year_series}
      });
    });

    // #chart-cumulative-revenue-by-day-of-month
    $(function () { 
      $('#chart-cumulative-revenue-by-day-of-month').highcharts({
        chart: {
          spacing: [40, 30, 40, 30],
          type: 'line',
          background: '#ffffff',
          style: {
            fontFamily: 'Source Sans Pro'
          }
        },
        title: {
          text: 'Am I on track to meet my revenue goal for the month?'
        },
        legend: {
          itemStyle: {
            'fontSize': '13px', 
            'fontWeight': 'normal',
            'color': '#555555'
          },
          margin: 20,
          verticalAlign: 'top',
          layout: 'vertical',
          align: 'left',
          itemMarginBottom: 8
        },
        xAxis: {
          categories: #{get_days_of_month_array},
          title: {
            text: 'Day Of Month'
          },
          labels: {
            style: {
              fontSize: '13px'
            }
          }
        },
        yAxis: {
          title: {
            text: 'Revenue ($)'
          },
          opposite: true,
          labels: {
            style: {
              fontSize: '13px'
            },
            format: "${value}"
          },
          tickInterval: '2000'
        },
        tooltip: {
          
          headerFormat: '<span style="font-size: 15px; font-weight: bold;">Day {point.key}</span><br/>',
          style: {
            'padding': '20px 20px 15px 20px',
            'fontSize': '15px'
          }
        },
        series: #{get_cumulative_revenue_by_day_of_month_series_summary}
      });
    });

    // #chart-daily-revenue
    $(function () { 
      $('#chart-daily-revenue').highcharts({
        chart: {
          spacing: [40, 30, 40, 30],
          type: 'line',
          background: '#ffffff',
          reflow: true,
          style: {
            fontFamily: 'Source Sans Pro'
          }
        },
        title: {
          text: 'Am I on track to meet my revenue goal today?'
        },
        legend: {
          itemStyle: {
            'fontSize': '13px', 
            'fontWeight': 'normal',
            'color': '#555555'
          },
          margin: 20,
          verticalAlign: 'top',
          layout: 'vertical',
          align: 'left',
          itemMarginBottom: 8
        },
        xAxis: {
          categories: #{get_last_x_dates_as_strings_array},
          title: {
            text: 'Last 60 Days',
            offset: 50
          },
          labels: {
            autoRotation: [-10, -20, -30, -40, -50, -60, -70, -80, -90],
            rotation: -90,
            style: {
              fontSize: '13px'
            }
          }
        },
        yAxis: {
          title: {
            text: 'Revenue ($)'
          },
          opposite: true,
          labels: {
            style: {
              fontSize: '13px'
            },
            format: "${value}"
          },
          tickInterval: '200'
        },
        tooltip: {
          formatter: function () {
            revenue = this.y + Math.round(#{get_daily_revenue_goal_by_month(Date.today)})
            return '<b>' + this.x + ':</b><br> Delta: <b>$' + this.y + '</b><br>Revenue: <b>$' + revenue + '</b>';
            },
          style: {
            'padding': '20px 20px 15px 20px',
            'fontSize': '15px'
          }
        },
        series: #{get_daily_revenue_vs_target_chart_series}
      });
    });
    
    


     // TABLE //////////////////////////////////////
    $("#table-revenue-by-month").DataTable({
      dom: 'iCfrtS',
      pageLength: -1,
      order: [0, 'asc'],
      orderClasses: true
    });


