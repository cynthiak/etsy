#page-orders.page-content-body
  .page-content-body-section
    %h1
      = order_type
      Orders

    - # ORDERS: TABS #################################
    .tabbed-charts
      .tabbed-charts-tabs-orders.tabbed-charts-tabs.stats.stats-5.stats-tabbed{role: "tablist"}
        %a.stat-container.active{"href" => "#table-customers-container", "aria-controls" => "table-customers-container", "role" => "tab", "data-toggle" => "tab"}
          -if get_incomplete_orders_count(order_type) > 0
            .stat
              .stat-label Orders Left To Ship
              .stat-number= get_incomplete_orders_count(order_type)
              .stat-stats
                .stat-stats-row
                  %span.stat-stats-row-number=get_unshipped_orders_count(order_type)
                  %span.stat-stats-row-label orders left to ship
                .stat-stats-row
                  %span.stat-stats-row-number=get_unpaid_orders_count(order_type)
                  %span.stat-stats-row-label orders needing payment
          -else
            .stat
              .stat-label Total Orders
              .stat-number= get_incomplete_orders_count(order_type)
              .stat-stats
                .stat-stats-row
                  %span.stat-stats-row-number=get_unshipped_orders_count(order_type)
                  %span.stat-stats-row-label orders left to ship
                .stat-stats-row
                  %span.stat-stats-row-number=get_unpaid_orders_count(order_type)
                  %span.stat-stats-row-label orders needing payment
        %a.stat-container{"href" => "#chart-average-revenue-by-customer-container", "aria-controls" => "chart-average-revenue-by-customer-container", "role" => "tab", "data-toggle" => "tab"}
          .stat
            .stat-label Revenue/Customer
            .stat-number.green=format_money(get_average_revenue_per_customer(order_type, nil, nil)) + "/customer"
            .stat-stats
              .stat-stats-row
                %span.stat-stats-row-number=get_customers_count(order_type, nil, nil)
                %span.stat-stats-row-label customers
              .stat-stats-row
                %span.stat-stats-row-number.green=format_money(get_revenue(order_type))
                %span.stat-stats-row-label revenue
        %a.stat-container{"href" => "#chart-average-revenue-by-order-container", "aria-controls" => "chart-average-revenue-by-order-container", "role" => "tab", "data-toggle" => "tab"}
          .stat
            .stat-label Revenue/Order
            .stat-number.green=format_money(get_average_revenue_per_order(order_type, nil, nil))  + "/order"
            .stat-stats
              .stat-stats-row
                %span.stat-stats-row-number.green=format_money(get_revenue(order_type))
                %span.stat-stats-row-label revenue
              .stat-stats-row
                %span.stat-stats-row-number= get_orders_count(order_type, nil, nil)
                %span.stat-stats-row-label orders
        %a.stat-container{"href" => "#chart-average-revenue-by-order-item-container", "aria-controls" => "chart-average-revenue-by-order-item-container", "role" => "tab", "data-toggle" => "tab"}
          .stat
            .stat-label Revenue/Order Item
            .stat-number.green=format_money(get_average_revenue_per_order_item(order_type, nil, nil))  + "/item"
            .stat-stats
              .stat-stats-row
                %span.stat-stats-row-number.green=format_money(get_revenue(order_type))
                %span.stat-stats-row-label revenue
              .stat-stats-row
                %span.stat-stats-row-number= get_items_sold_count(order_type, nil, nil)
                %span.stat-stats-row-label order items
        %a.stat-container{"href" => "#chart-average-order-items-by-order-container", "aria-controls" => "chart-average-order-items-by-order-container", "role" => "tab", "data-toggle" => "tab"}
          .stat
            .stat-label Order Items/Order
            .stat-number= format_number(get_average_items_per_order(order_type)) + "/order"
            .stat-stats
              .stat-stats-row
                %span.stat-stats-row-number= get_items_sold_count(order_type, nil, nil)
                %span.stat-stats-row-label order items
              .stat-stats-row
                %span.stat-stats-row-number= get_orders_count(order_type, nil, nil)
                %span.stat-stats-row-label orders

      - # PRODUCTS: CHARTS #################################
      .tabbed-charts-content.tab-content
        #table-customers-container.tab-pane.active{"role" => "tabpanel"}
          .page-content-body-section-box
            %br
            - if get_unshipped_orders(order_type).count != 0
              %h1 
                = order_type
                Orders To Ship
              %table.stripe.order-column{id: "table-orders-toship"}
                %thead
                  %tr
                    %th Order
                    %th Sold
                    %th Paid
                    %th Name
                    %th Items
                    %th Value
                    %th Coupon
                    %th Shipping
                    %th Tax
                    %th Refund
                    %th Total
                    %th Fee
                    %th Net
                %tbody
                  - get_unshipped_orders(order_type).each do |order|
                    %tr
                      %td.border-right
                        %span.order-number
                          = link_to order_url(order), target: "_blank" do
                            - if order.order_number != "" && order.order_number != nil
                              = order.order_number
                            - else
                              = order.id.to_s
                          = link_to edit_admin_order_url(order), target: "_blank" do
                            %span.glyphicon.glyphicon-pencil.edit-icon
                      %td= order.sale_date
                      %td.border-right= order.date_paid
                      %td.border-right
                        =link_to customer_url(order.customer) do
                          = order.customer.first_name
                          = order.customer.last_name
                        = link_to edit_admin_customer_url(order.customer), target: "_blank" do
                          %span.glyphicon.glyphicon-pencil.edit-icon
                      %td.border-right= order.number_of_items
                      %td= "$" + order.order_value.to_s
                      %td
                        = order.coupon_code
                        %span.secondary= order.coupon_details
                      %td= "$" + order.shipping.to_s
                      %td= "$" + order.sales_tax.to_s
                      %td.border-right= order.refund? ? "$" + order.refund.to_s : ""
                      %td
                        = order.adjusted_order_total? ? "$" + order.adjusted_order_total.to_s : "$" + order.order_total.to_s
                      %td.red
                        = order.adjusted_card_processing_fees? ? "$" + order.adjusted_card_processing_fees.to_s : "$" + order.card_processing_fees.to_s
                      %td.green
                        %strong= order.adjusted_net_order_amount? ? "$" + order.adjusted_net_order_amount.to_s : "$" + order.order_net.to_s
              %br
              %br

            - if get_unpaid_orders(order_type).count != 0
              %h1 
                = order_type
                Orders Needing Payment
              %table.stripe.order-column{id: "table-orders-unpaid"}
                %thead
                  %tr
                    %th Order
                    %th Sold
                    %th Paid
                    %th Shipped
                    %th Name
                    %th Items
                    %th Value
                    %th Coupon
                    %th Shipping
                    %th Tax
                    %th Refund
                    %th Total
                    %th Fee
                    %th Net
                %tbody
                  - get_unpaid_orders(order_type).each do |order|
                    %tr
                      %td.border-right
                        %span.order-number
                          = link_to order_url(order), target: "_blank" do
                            - if order.order_number != "" && order.order_number != nil
                              = order.order_number
                            - else
                              = order.id.to_s
                          = link_to edit_admin_order_url(order), target: "_blank" do
                            %span.glyphicon.glyphicon-pencil.edit-icon
                      %td= order.sale_date
                      %td= order.date_paid
                      %td.border-right= order.date_shipped
                      %td.border-right
                        =link_to customer_url(order.customer) do
                          = order.customer.first_name
                          = order.customer.last_name
                        = link_to edit_admin_customer_url(order.customer), target: "_blank" do
                          %span.glyphicon.glyphicon-pencil.edit-icon
                      %td.border-right= order.number_of_items
                      %td=format_money(order.order_value)
                      %td
                        = order.coupon_code
                        %span.secondary= order.coupon_details
                      %td=format_money(order.shipping)
                      %td=format_money(order.sales_tax)
                      %td.border-right= order.refund? ? format_money(order.refund) : ""
                      %td
                        = order.adjusted_order_total? ? format_money(order.adjusted_order_total) : format_money(order.order_total)
                      %td.red
                        = order.adjusted_card_processing_fees? ? format_money(order.adjusted_card_processing_fees) : format_money(order.card_processing_fees)
                      %td.green
                        %strong= order.adjusted_net_order_amount? ? format_money(order.adjusted_net_order_amount) : format_money(order.order_net)
              %br
              %br

            %h1
              = order_type
              Completed Orders
            %table.stripe.order-column{id: "table-orders-completed"}
              %thead
                %tr
                  %th Order
                  %th Sold
                  %th Paid
                  %th Shipped
                  %th Name
                  %th Items
                  %th Value
                  %th Coupon
                  %th Shipping
                  %th Tax
                  %th Refund
                  %th Total
                  %th Fee
                  %th Net
              %tbody
                - get_completed_orders(order_type).each do |order|
                  %tr
                    %td.border-right
                      %span.order-number
                        = link_to order_url(order) do
                          - if order.order_number != "" && order.order_number != nil
                            = order.order_number
                          - else
                            = order.id.to_s
                        = link_to edit_admin_order_url(order), target: "_blank" do
                          %span.glyphicon.glyphicon-pencil.edit-icon
                    %td= order.sale_date
                    %td= order.date_paid
                    %td.border-right= order.date_shipped
                    %td.border-right
                      =link_to customer_url(order.customer) do
                        = order.customer.first_name
                        = order.customer.last_name
                      = link_to edit_admin_customer_url(order.customer), target: "_blank" do
                        %span.glyphicon.glyphicon-pencil.edit-icon
                    %td.border-right= order.number_of_items
                    %td=format_money(order.order_value)
                    %td
                      = order.coupon_code
                      %span.secondary= order.coupon_details
                    %td=format_money(order.shipping)
                    %td=format_money(order.sales_tax)
                    %td.border-right= order.refund? ? format_money(order.refund) : ""
                    %td
                      = order.refund? ? format_money(order.adjusted_order_total) : format_money(order.order_total)
                    %td.red
                      = order.adjusted_card_processing_fees? ? format_money(order.adjusted_card_processing_fees) : format_money(order.card_processing_fees)
                    %td.green
                      %strong= order.refund? ? format_money(order.adjusted_net_order_amount) : format_money(order.order_net)

        #chart-average-revenue-by-customer-container.tab-pane{"role" => "tabpanel"}
          #chart-average-revenue-by-customer.chart

        #chart-average-revenue-by-order-container.tab-pane{"role" => "tabpanel"}
          #chart-average-revenue-by-order.chart

        #chart-average-revenue-by-order-item-container.tab-pane{"role" => "tabpanel"}
          #chart-average-revenue-by-order-item.chart

        #chart-average-order-items-by-order-container.tab-pane{"role" => "tabpanel"}
          #chart-average-order-items-by-order.chart

    - # MARGIN: TABLE #################################
    %table#table-orders-by-month.stripe.order-column
      %thead
        %tr
          %th Month
          
          %th Customers
          %th Revenue
          %th Orders
          %th Order Items

          %th Revenue/Customer
          %th Revenue/Order
          %th Revenue/Order Items
          %th Order Items/Order
      %tbody
        -get_months.each do |month|
          %tr{class: month.month == 12 ? "border-bottom" : ""}
            %td.border-right-thick
              %strong= month.strftime "%Y - %m - %b"

            %td=get_customers_count_by_month(order_type, month)
            %td.green
              %strong=format_money(get_revenue_by_month(order_type, month))
            %td=get_orders_count_by_month(order_type, month)
            %td.border-right-thick=get_items_sold_count_by_month(order_type, month)

            %td.green=format_money(get_average_revenue_per_customer_by_month(order_type, month))
            %td.green=format_money(get_average_revenue_per_order_by_month(order_type, month))
            %td.green=format_money(get_average_revenue_per_order_item_by_month(order_type, month))
            %td=get_average_items_per_order_by_month(order_type, month)
      %tfoot
        %tr.border-top-thick.border-bottom-thick
          %th.border-right-thick Year
          
          %th Customers
          %th Revenue
          %th Orders
          %th.border-right-thick Order Items

          %th Revenue/Customer
          %th Revenue/Order
          %th Revenue/Order Items
          %th Order Items/Order
        -get_years.each do |year|
          %tr
            %th.border-right-thick
              %strong
                Total -
                = year
            
            %th=get_customers_count_by_year(order_type, year)
            %th.green
              %strong=format_money(get_revenue_by_year(order_type, year))
            %th=get_orders_count_by_year(order_type, year)
            %th.border-right-thick=get_items_sold_count_by_year(order_type, year)

            %th.green=format_money(get_average_revenue_per_customer_by_year(order_type, year))
            %th.green=format_money(get_average_revenue_per_order_by_year(order_type, year))
            %th.green=format_money(get_average_revenue_per_order_item_by_year(order_type, year))
            %th=get_average_items_per_order_by_year(order_type, year)

          
          

:javascript
  // CHART TABS //////////////////////////////////////
  $('.tabbed-charts-tabs-orders a').click(function (e) {
    e.preventDefault();
    // $(this).tab('show');
    $('.tabbed-charts-tabs-orders a').removeClass('active');
    $(this).addClass('active');
    jQuery(".chart").each(function() {
      var chart = jQuery(this).highcharts(); // target the chart itself
      chart.reflow(); // reflow that chart
    });
  });

  // TABLES //////////////////////////////////////
  $("#table-orders-toship").DataTable({
    dom: 'iCfrtS',
    pageLength: -1,
    order: [1, 'desc'],
    orderClasses: true
  });
  $("#table-orders-unpaid").DataTable({
    dom: 'iCfrtS',
    pageLength: -1,
    order: [1, 'desc'],
    orderClasses: true
  });
  $("#table-orders-completed").DataTable({
    dom: 'iCfrtS',
    pageLength: -1,
    order: [1, 'desc'],
    orderClasses: true
  });
  $("#table-orders-by-month").DataTable({
    dom: 'iCfrtS',
    pageLength: -1,
    order: [0, 'asc'],
    orderClasses: true
  });

  $(function(){
    // #chart-average-revenue-by-customer
    $('#chart-average-revenue-by-customer').highcharts({
      chart: {
        spacing: [40, 30, 40, 30],
        type: 'line',
        background: '#ffffff',
        style: {
          fontFamily: 'Source Sans Pro'
        }
      },
      title: {
        text: ''
      },
      legend: {
        itemStyle: {
          'fontSize': '15px', 
          'fontWeight': 'normal',
          'color': '#555555'
        },
        margin: 20,
        verticalAlign: 'top'
      },
      xAxis: {
        categories: #{get_months_array},
        labels: {
          style: {
            fontSize: '14px'
          }
        }
      },
      yAxis: [
        {
          title: {
            text: 'Revenue Per Customer ($)'
          },
          labels: {
            style: {
              fontSize: '13px'
            },
            format: "${value}"
          }
        },
        {
          title: {
            text: 'Customers'
          },
          opposite: true,
          labels: {
            style: {
              fontSize: '13px'
            },
            format: "{value}"
          }
        }
      ],
      tooltip: {
        shared: true,
        headerFormat: '<span style="font-size: 15px; font-weight: bold;">{point.key}</span><br/>',
        style: {
          'padding': '20px 20px 15px 20px',
          'fontSize': '15px'
        }
      },
      series: [
        {
          name: 'Customers',
          yAxis: 1,
          data: #{get_customers_array_by_months(order_type)},
          marker: {
            enabled: false
          }
        },
        {
          name: 'Average Revenue Per Customer',
          data: #{get_revenue_per_customer_array_by_months(order_type)},
          marker: {
            enabled: false
          }
        }
      ]
    });

    // #chart-average-revenue-by-order
    $('#chart-average-revenue-by-order').highcharts({
      chart: {
        spacing: [40, 30, 40, 30],
        type: 'line',
        background: '#ffffff',
        style: {
          fontFamily: 'Source Sans Pro'
        }
      },
      title: {
        text: ''
      },
      legend: {
        itemStyle: {
          'fontSize': '15px', 
          'fontWeight': 'normal',
          'color': '#555555'
        },
        margin: 20,
        verticalAlign: 'top'
      },
      xAxis: {
        categories: #{get_months_array},
        labels: {
          style: {
            fontSize: '14px'
          }
        }
      },
      yAxis: [
        {
          title: {
            text: 'Revenue Per Order ($)'
          },
          labels: {
            style: {
              fontSize: '13px'
            },
            format: "${value}"
          }
        },
        {
          title: {
            text: 'Orders'
          },
          opposite: true,
          labels: {
            style: {
              fontSize: '13px'
            },
            format: "{value}"
          }
        }
      ],
      tooltip: {
        shared: true,
        headerFormat: '<span style="font-size: 15px; font-weight: bold;">{point.key}</span><br/>',
        style: {
          'padding': '20px 20px 15px 20px',
          'fontSize': '15px'
        }
      },
      series: [
        {
          name: 'Orders',
          yAxis: 1,
          data: #{get_orders_array_by_months(order_type)},
          marker: {
            enabled: false
          }
        },
        {
          name: 'Average Revenue Per Order',
          data: #{get_revenue_per_order_array_by_months(order_type)},
          marker: {
            enabled: false
          }
        }

      ]
    });

    // #chart-average-revenue-by-order-item
    $('#chart-average-revenue-by-order-item').highcharts({
      chart: {
        spacing: [40, 30, 40, 30],
        type: 'line',
        background: '#ffffff',
        style: {
          fontFamily: 'Source Sans Pro'
        }
      },
      title: {
        text: ''
      },
      legend: {
        itemStyle: {
          'fontSize': '15px', 
          'fontWeight': 'normal',
          'color': '#555555'
        },
        margin: 20,
        verticalAlign: 'top'
      },
      xAxis: {
        categories: #{get_months_array},
        labels: {
          style: {
            fontSize: '14px'
          }
        }
      },
      yAxis: [
        {
          title: {
            text: 'Revenue Per Order ($)'
          },
          labels: {
            style: {
              fontSize: '13px'
            },
            format: "${value}"
          }
        },
        {
          title: {
            text: 'Order Items'
          },
          opposite: true,
          labels: {
            style: {
              fontSize: '13px'
            },
            format: "{value}"
          }
        }
      ],
      tooltip: {
        shared: true,
        headerFormat: '<span style="font-size: 15px; font-weight: bold;">{point.key}</span><br/>',
        style: {
          'padding': '20px 20px 15px 20px',
          'fontSize': '15px'
        }
      },
      series: [
        {
          name: 'Order Items',
          yAxis: 1,
          data: #{get_order_items_array_by_months(order_type)},
          marker: {
            enabled: false
          }
        },
        {
          name: 'Average Revenue Per Order Item',
          data: #{get_revenue_per_order_item_array_by_months(order_type)},
          marker: {
            enabled: false
          }
        }

      ]
    });

    // #chart-average-order-items-by-order
    $('#chart-average-order-items-by-order').highcharts({
      chart: {
        spacing: [40, 30, 40, 30],
        type: 'line',
        background: '#ffffff',
        style: {
          fontFamily: 'Source Sans Pro'
        }
      },
      title: {
        text: ''
      },
      legend: {
        itemStyle: {
          'fontSize': '15px', 
          'fontWeight': 'normal',
          'color': '#555555'
        },
        margin: 20,
        verticalAlign: 'top'
      },
      xAxis: {
        categories: #{get_months_array},
        labels: {
          style: {
            fontSize: '14px'
          }
        }
      },
      yAxis: [
        {
          title: {
            text: 'Order Items'
          },
          labels: {
            style: {
              fontSize: '13px'
            },
            format: "{value}"
          }
        },
        {
          title: {
            text: 'Orders'
          },
          opposite: true,
          labels: {
            style: {
              fontSize: '13px'
            },
            format: "{value}"
          }
        }
      ],
      tooltip: {
        shared: true,
        headerFormat: '<span style="font-size: 15px; font-weight: bold;">{point.key}</span><br/>',
        style: {
          'padding': '20px 20px 15px 20px',
          'fontSize': '15px'
        }
      },
      series: [
        {
          name: 'Orders',
          yAxis: 1,
          data: #{get_orders_array_by_months(order_type)},
          marker: {
            enabled: false
          }
        },
        {
          name: 'Average Order Items Per Order',
          data: #{get_order_items_per_order_array_by_months(order_type)},
          marker: {
            enabled: false
          }
        }

      ]
    });


  });


