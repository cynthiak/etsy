#page-products.page-content-body
  .page-content-body-section.page-content-body-section-products
    %h1 Products

    - # PRODUCTS: TABS #################################
    .tabbed-charts
      .tabbed-charts-tabs-products.tabbed-charts-tabs.stats.stats-3.stats-tabbed{role: "tablist"}
        %a.stat-container{"href" => "#chart-revenue-by-product-line-container", "aria-controls" => "chart-revenue-by-product-line-container", "role" => "tab", "data-toggle" => "tab"}
          .stat
            .stat-label Total Revenue
            .stat-number= format_money(get_revenue)
            .stat-stats
              .stat-stats-row
                %span.stat-stats-row-number=get_products_count
                %span.stat-stats-row-label products

        %a.stat-container.active{"href" => "#chart-margin-by-product-line-container", "aria-controls" => "chart-margin-by-product-line-container", "role" => "tab", "data-toggle" => "tab"} 
          .stat
            .stat-label Total Margin
            .stat-number= format_money(get_margin)
            .stat-stats
              .stat-stats-row
                %span.stat-stats-row-number=format_percentage(get_margin_percentage)
                %span.stat-stats-row-label margin
        
        %a.stat-container{"href" => "#chart-items-sold-by-product-line-container", "aria-controls" => "#chart-items-sold-by-product-line-container", "role" => "tab", "data-toggle" => "tab"}
          .stat
            .stat-label Average Revenue Per Item
            .stat-number= format_money(get_average_revenue_per_order_item) + "/item"
            .stat-stats
              .stat-stats-row
                %span.stat-stats-row-number= format_number(get_items_sold_count)
                %span.stat-stats-row-label total items sold


      - # PRODUCTS: CHARTS #################################
      .tabbed-charts-content.tab-content
        #chart-revenue-by-product-line-container.tab-pane{"role" => "tabpanel"}
          #chart-revenue-by-product-line.chart

        #chart-margin-by-product-line-container.tab-pane.active{"role" => "tabpanel"}
          #chart-margin-by-product-line.chart

        #chart-items-sold-by-product-line-container.tab-pane{"role" => "tabpanel"}
          #chart-items-sold-by-product-line.chart 

    - # PRODUCTS: TABLE #################################
    %table#table-products.stripe.order-column
      %thead
        %tr
          %th Product
          %th Items Sold

          %th Revenue
          %th Materials Bought
          %th Cost Of Sold

          %th Profit
          %th Margin

          %th Avg Rev/Item
          %th Avg Cost/Item
          %th Avg Margin/Item

      %tbody
        - get_product_types.each do |product_type|
          %tr
            %td.border-right-thick
              =product_type.product_type
              =link_to edit_admin_product_type_url(product_type), target: "_blank" do
                %span.glyphicon.glyphicon-pencil.edit-icon
            %td.border-right-thick=product_type.get_order_items_count

            %td.green.border-right
              %strong=format_money(product_type.get_revenue)
            %td=format_money(product_type.get_expenses)
            %td.border-right=format_money(product_type.get_cost_of_sold)
            
            %td{class: product_type.get_profit < 0 ? "red" : "green"}
              %strong= format_money(product_type.get_profit)
            %td{class: product_type.get_margin < 0 ? "red border-right-thick" : "green border-right-thick"}
              %strong=format_money(product_type.get_margin)

            %td.green=format_money(product_type.get_average_revenue_per_order_item)
            %td.red=format_money(product_type.get_average_cost_of_sold)
            %td{class: product_type.get_average_margin < 0 ? "border-right red" : "border-right green"}
              = format_money(product_type.get_average_margin)

  - get_product_types.each do |product_type|
    .page-content-body-section
      %h1
        =product_type.product_type
        = link_to edit_admin_product_type_url(product_type), target: "_blank" do
          %span.glyphicon.glyphicon-pencil.edit-icon

      .stats
        -if product_type.get_order_items_count > 0
          .stat-container
            .stat
              .stat-label 
                =product_type.product_type
                Items Sold
              .stat-number
                = format_number(product_type.get_order_items_count)
          .stat-container
            .stat
              .stat-label 
                =product_type.product_type
                Revenue
              .stat-number.green
                = format_money(product_type.get_revenue)
          .stat-container
            .stat
              .stat-label 
                Average Per
                =product_type.product_type
              .stat-number.green
                = format_money(product_type.get_average_revenue_per_order_item) + "/" + product_type.product_type

      -if product_type == "T-shirt"
        %table.stripe.order-column{class: 'table-product-type-' + product_type.id.to_s}
          %thead
            %tr
              %th T-shirt
              %th Variation
              %th Sold
              %th Revenue
          %tbody
            - product_type.get_products.each do |product|
              - previous_variation = nil
              - product.get_variations.each do |variation|
                - current_variation = variation.gender + "_" + variation.style
                = render :partial => 'tshirt_variation', :locals => {:tshirt => product, :variation => variation, :previous_variation => previous_variation, :current_variation => current_variation}
                - previous_variation = current_variation
      -else
        %table.stripe.order-column{class: 'table-product-type-' + product_type.id.to_s}
          %thead
            %tr
              %th Design
              %th Item
              %th Items Sold
              %th Revenue
              %th Cost
              %th Margin ($)
              %th Margin (%)
              %th Avg Rev/Item
              %th Avg Cost/Item
              %th Avg Margin/Item
          %tbody
            - product_type.get_products.each do |product|
              %tr
                %td.border-right= product.occasion
                %td.border-right-thick
                  = product.description
                  = link_to edit_admin_product_url(product), target: "_blank" do
                    %span.glyphicon.glyphicon-pencil.edit-icon
                %td.border-right-thick= product.get_order_items_count
                %td.border-right.green
                  %strong= format_money(product.get_total_revenue)
                %td.border-right= format_money(product.get_total_cost_of_sold)
                %td.green
                  %strong= format_money(product.get_margin_of_sold)
                %td.border-right-thick= format_percentage(product.get_margin_percentage_of_sold)
                %td.green= format_money(product.get_average_revenue)
                %td.red= format_money(product.get_average_cost)
                %td.green= format_money(product.get_average_margin)


- get_product_types.each do |product_type|
  :javascript
    $(".table-product-type-#{product_type.id.to_s}").DataTable({
      dom: 'iCfrtS',
      pageLength: -1,
      order: [3, 'desc'],
      orderClasses: true
    });


:javascript

  // CHART TABS //////////////////////////////////////
  $('.tabbed-charts-tabs-products a').click(function (e) {
    e.preventDefault();
    $(this).tab('show');
    $('.tabbed-charts-tabs-products a').removeClass('active');
    $(this).addClass('active');
    jQuery(".chart").each(function() {
      var chart = jQuery(this).highcharts(); // target the chart itself
      chart.reflow(); // reflow that chart
    });
  });


  // PRODUCT CHARTS //////////////////////////////////////
  $(function () { 
    // #chart-revenue-by-product-line
    $('#chart-revenue-by-product-line').highcharts({
      chart: {
        spacing: [40, 30, 40, 30],
        type: 'line',
        background: '#ffffff',
        style: {
          fontFamily: 'Source Sans Pro'
        }
      },
      title: {
        text: 'How are my core product lines doing?'
      },
      legend: {
        itemStyle: {
          'fontSize': '13px', 
          'fontWeight': 'normal',
          'color': '#555555'
        },
        margin: 20,
        verticalAlign: 'top',
        layout: 'vertical',
        align: 'left',
        itemMarginBottom: 8
      },
      xAxis: {
        categories: #{get_months_array},
        title: {
          text: 'Month'
        },
        labels: {
          style: {
            fontSize: '13px'
          }
        }
      },
      yAxis: {
        title: {
          text: 'Revenue ($)'
        },
        opposite: true,
        labels: {
          style: {
            fontSize: '13px'
          },
          format: "${value}"
        },
        tickInterval: '500'
      },
      tooltip: {
        split: true,
        style: {
          'padding': '20px 20px 15px 20px',
          'fontSize': '15px'
        }
      },
      series: #{get_product_type_revenue_array_by_months}
    });
    // #chart-margin-by-product-line
    $('#chart-margin-by-product-line').highcharts({
      chart: {
        spacing: [40, 30, 40, 30],
        type: 'line',
        background: '#ffffff',
        style: {
          fontFamily: 'Source Sans Pro'
        }
      },
      title: {
        text: 'Which product lines are making me the most money?'
      },
      legend: {
        itemStyle: {
          'fontSize': '13px', 
          'fontWeight': 'normal',
          'color': '#555555'
        },
        margin: 20,
        verticalAlign: 'top',
        layout: 'vertical',
        align: 'left',
        itemMarginBottom: 8
      },
      xAxis: {
        categories: #{get_months_array},
        title: {
          text: 'Month'
        },
        labels: {
          style: {
            fontSize: '13px'
          }
        }
      },
      yAxis: {
        title: {
          text: 'Revenue ($)'
        },
        opposite: true,
        labels: {
          style: {
            fontSize: '13px'
          },
          format: "${value}"
        },
        tickInterval: '500'
      },
      tooltip: {
        split: true,
        style: {
          'padding': '20px 20px 15px 20px',
          'fontSize': '15px'
        }
      },
      series: #{get_product_type_margin_array_by_months}
    });
    // #chart-items-sold-by-product-line
    $('#chart-items-sold-by-product-line').highcharts({
      chart: {
        spacing: [40, 30, 40, 30],
        type: 'line',
        background: '#ffffff',
        style: {
          fontFamily: 'Source Sans Pro'
        }
      },
      title: {
        text: 'Which product lines are selling the most?'
      },
      legend: {
        itemStyle: {
          'fontSize': '13px', 
          'fontWeight': 'normal',
          'color': '#555555'
        },
        margin: 20,
        verticalAlign: 'top',
        layout: 'vertical',
        align: 'left',
        itemMarginBottom: 8
      },
      xAxis: {
        categories: #{get_months_array},
        title: {
          text: 'Month'
        },
        labels: {
          style: {
            fontSize: '13px'
          }
        }
      },
      yAxis: {
        title: {
          text: 'Items Sold'
        },
        opposite: true,
        labels: {
          style: {
            fontSize: '13px'
          },
          format: "{value}"
        },
        tickInterval: '200'
      },
      tooltip: {
        split: true,
        style: {
          'padding': '20px 20px 15px 20px',
          'fontSize': '15px'
        }
      },
      series: #{get_product_type_items_sold_array_by_months}
    });

    // TABLE //////////////////////////////////////
    $("#table-products").DataTable({
      dom: 'iCfrtS',
      pageLength: -1,
      order: [1, 'desc'],
      orderClasses: true
    });
  });